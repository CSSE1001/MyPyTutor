#{Text}#
<h3>Add Functions</h3>

Write a function <tt>addFunctions</tt> that takes as its arguments two functions <tt>f</tt> and <tt>g</tt>, where <tt>f</tt> and <tt>g</tt> each take a number as input and return a number. The result returned by <tt>addFunctions</tt> should be a function that takes a number <tt>x</tt> as input and returns the sum of <tt>f(x)</tt> and <tt>g(x)</tt>.

For example, if <tt>square</tt> is the function that squares its input and <tt>inc</tt> is the function that returns its input plus 1, then
<p>
<tt>addFunctions(square,inc)(5)</tt>
<p>
should return <tt>31</tt> (which is <tt>25+6</tt>). 




#{Hint}#

Return a lambda term.















#{TestCode}#

#{test}#

#{code}#
answer = 31
try:
    result = addFunctions(lambda x:x**2, lambda x:x+1)(5)
    ok = True
except Exception as e:
    print_exception(e)
    ok = False
if not ok:
    pass
elif result != answer:
    print_error("Wrong: for addFunctions(lambda x:x**2, lambda x:x+1)(5) you got %d - the correct answer is %d." % (result, answer))

#{test}#

#{code}#
answer = 39
try:
    result = addFunctions(lambda x:x**2, lambda x:x/2)(6)
    ok = True
except Exception as e:
    print_exception(e)
    ok = False
if not ok:
    pass
elif result != answer:
    print_error("Wrong: for addFunctions(lambda x:x**2, lambda x:x/2)(6) you got %s - the correct answer is %d." % (str(result), answer))


#{test}#
#{code}#
correct()






















