#{Text}#
<h3>List Comprehension</h3>
List comprehension is typically used to filter and transform lists.
<p>
Given the variable <tt>nums</tt>, whose value is a list of integers, write
an assignment statement that assigns to the variable <tt>square_odds</tt>
the list of the squares of the odd numbers in the list <tt>nums</tt>.
<p>
You must use list comprehension.





#{TestCode}#

#{global}#
import random,compiler
class CodeVisitor:
    def __init__(self):
        self.assign = False
        self.use_comp = False
        self.use_if = False
        self.use_nums = False


    def visitAssign(self, t):
        if t.getChildren()[0].__class__ == compiler.ast.AssName:
            if t.getChildren()[0].name == 'square_odds':
                self.assign = True
                for child in t.getChildren():
                    compiler.walk(child, self)
    
    def visitListCompFor(self, t):
        if self.use_comp:
            children = t.getChildren()
            if children[1].__class__ == compiler.ast.Name and \
               children[1].name == 'nums':
                self.use_nums = True
            if len(children) == 3:
                compiler.walk(children[2], self)
        
    def visitListComp(self, t):
        if self.assign:
            self.use_comp = True
            for child in t.getChildren():
                compiler.walk(child, self)

    def visitListCompIf(self, t):
        if self.use_comp:
            self.use_if = True

            
#{test}#
#{init}#
nums = [1,2,3]
#{code}#
ast = compiler.parse(user_text)
visitor = CodeVisitor()
compiler.walk(ast, visitor)
if not visitor.assign:
    print_error('Wrong: you have not assigned to square_odds.')
elif not visitor.use_comp:
    print_error('Wrong: you have not used list comprehension in the square_odds assignment.')
elif not visitor.use_nums:
    print_error('Wrong: you have not used nums in the list comprehension.')    
elif not visitor.use_if:
    print_error('Wrong: you have not used an if expression in the list comprehnesion.')

#{test}#
#{start}#
import random
n = [random.randint(2,20) for _ in range(20)]
#{init}#
nums = list(n)
#{code}#
if nums != n:
    print_error("Wrong: you have modified nums.")
else:
    answer = [x*x for x in nums if x % 2 == 1]
    if square_odds != answer:
        print_error("Wrong: when nums is \n%s\nyou got \n%s\nthe correct answer is \n%s" %(str(nums), str(square_odds),str(answer)))
#{test}#
#{init}#
nums = []

#{code}#
correct()





