#{Text}#
<h3>Finding the Mean</h3>
The mean (or average) of a non-empty list of <tt>n</tt> numbers is the sum of the numbers divided by <tt>n</tt>. For example, the mean of 2, 7, 3, 9, and 13 is (2+7+3+9+13)/5, or 6.8. Write a function <tt>mean</tt> that takes as input a non-empty list of numbers (of any length > 0) and returns the mean.
#{Hint}#
You can implement this as an extremely short function if you use the Python built-in procedures <tt>sum</tt>, which returns the sum of the elements of a list, and <tt>len</tt>, which returns the length of a list.
#{Hint}#
If your function says that the mean of 1 and 2 is 1, rather than 1.5, then you've been tricked by Python's division (/) operation. Be careful.



















#{TestCode}#


#{test repeats=4}#
#{start}#
import random
il = [random.randint(1,10) for i in range(random.randint(4,8))]
#{init}#
nums = list(il)
#{code}#
answer = float(sum(nums))/len(nums)
try:
    result = mean(nums)
    ok = True
except Exception, e:
    print_exception(e)
    ok = False
if not ok:
    pass
elif result == answer:
    pass
elif result == None:
    print_error('Wrong: you are not returning a value')
elif type(result) not in [type(1), type(1.1)]:
    print_error('Wrong: you are not returning a number.')
elif result == int(answer):
    print_error('Wrong: you appear to be using integer division - try using float(..)')
else:
    print_error('Wrong: for the list %s you got %s - the correct answer is %d' % (repr(nums), repr(result),answer))


#{test}#
#{code}#
correct()



