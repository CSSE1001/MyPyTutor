#{Text}#
<h3>Variable Assignment</h3>
Assignments are used to store information away for later use.
For example, the statement
<br>
<tt>total = 10</tt>
<br>
assigns the value <tt>10</tt> to the variable <tt>total</tt>.
<p>
Later we can use the value stored in the variable in an expression.
For example,
<br>
<tt>average = total/5</tt>
<br>
assigns to the variable <tt>average</tt> the value <tt>2</tt> (i.e. <tt>10/5</tt>).
<p>

Assume the variables <tt>item1</tt> and <tt>item2</tt> have integers 
associated with them.
Write an assignment statement that assigns the
product of the values stored in variables <tt>item1</tt> and <tt>item2</tt> to the variable <tt>prod</tt>. 
<p>
For example, if the numbers 3 and 5 were stored in <tt>item1</tt> and <tt>item2</tt> respectively then the value to be stored in <tt>prod</tt> should be 15 (i.e. the result of multiplying 3 and 5).

<p>
<b>NOTE:</b> In all tutorial questions, if the problem states that variables are
assumed to have values (like <tt>item1</tt> and <tt>item2</tt> in this problem)
then MyPyTutor will pick values for such variables to test your code.
You should <b>not</b> give values to these variables otherwise you will get incorrect results.

#{Hint}#
The right hand of the assignment should be an expression involving <tt>item1</tt> and <tt>item2</tt>.
#{Hint}#
The left hand side of the assignment should be <tt>prod</tt>.























#{TestCode}#
#{global}#
import random
#{test}#
#{start}#
item1_init = random.randint(2,100)
item2_init = random.randint(2,100)
#{init}#
item1 = item1_init
item2 = item2_init

#{code}#
import sys
if prod == item1_init*item2_init:
   correct()
elif item1 != item1_init or item2 != item2_init:
    print_error("Do not assign values to item1 or item2 - MyPyTutor does that.")
else:
   print_error("Wrong - You got "+str(prod)+ \
               " the correct result is "+str(item1_init*item2_init)+ \
               "\nThe right hand of the assignment should be an expression involving item1 and item2")  























