#{Text}#
<h3>If-Elif-Else Statements</h3>
This tutorial is about the if-elif-else form:
<br>
<pre>
if condition1:
    then_code
elif condition2:
    elif_code
else:
    else_code
</pre>
<br>
where <tt>condition1</tt> and <tt>condition2</tt> are boolean valued 
expressions and <tt>then_code</tt>, <tt>elif_code</tt> 
and  <tt>else_code</tt> are
sequences of statements.
<p>
If <tt>condition1</tt> is <tt>True</tt> then <tt>then_code</tt> will be executed.
<br>
Otherwise if <tt>condition2</tt> is <tt>True</tt> then <tt>elif_code</tt> will be executed.
<br>
Otherwise <tt>else_code</tt> will be executed.
<p>

Assume the variable <tt>n</tt> has an integer value. 
Write an if statement that assigns <tt>-1</tt> to <tt>sign</tt> if <tt>n</tt>
is negative, assigns <tt>0</tt> to <tt>sign</tt> if  <tt>n</tt>
is <tt>0</tt> and assigns <tt>1</tt> to <tt>sign</tt> otherwise.













#{TestCode}#
#{global}#
import compiler
class CodeVisitor:
    def __init__(self):
        self.fun_def = False
        self.has_if = False
        self.num_branches = 0

    def visitFunction(self,t):
        self.fun_def = True

    def visitIf(self, t):
        self.has_if = True
        self.num_branches = len(t.getChildNodes()) - 2

#{test}#
#{init}#
n = -3      
#{code}#
text = user_text
ast = compiler.parse(text)
visitor = CodeVisitor()
compiler.walk(ast, visitor)
if visitor.fun_def:
    print_error("Wrong: don't use a function - just an if statement.")
elif not visitor.has_if:
    print_error("Wrong: you need to use an if statement.")
elif visitor.num_branches != 3:
    print_error("Wrong: you need an if, an elif and an else.")
    
#{test}#
#{init}#
n = -3
#{code}#
result = sign == -1
if n != -3:
    print_error("Do not assign a value to n - MyPyTutor does that.")
elif not result:
    print_error("Wrong : your value for sign is "+\
                repr(sign)+" the correct value is -1\n")
    
#{test}#
#{init}#
n = 0
#{code}#
result = sign == 0
if n != -0:
    print_error("Do not assign a value to n - MyPyTutor does that.")
elif not result:
    print_error("Wrong : your value for sign is "+\
                repr(sign)+" the correct value is 0\n")
    
#{test}#
#{init}#
n = 5
#{code}#
result = sign == 1
if n != 5:
    print_error("Do not assign a value to n - MyPyTutor does that.")
elif result:
    correct()
else:
    print_error("Wrong : your value for sign is "+\
                repr(sign)+" the correct value is 1\n")
    
       











