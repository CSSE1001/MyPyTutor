#{Text}#
<h3>Strings and Tuples</h3>
Tuples can be used to store several pieces of information in one place.
For example, the tuple (pair in this case) 
<br>
<tt>('Meaning of life', 42)</tt> 
contains two pieces of information - a string and an integer.

<p>
Write a function <tt>len_str</tt> that takes a string as an argument and returns a pair consisting of the length of the string and the string itself.

<p>
Example: <tt>len_str('Meaning of life')</tt> should return the tuple <tt>(15, 'Meaning of life')</tt>.









#{TestCode}#
#{test}#
#{init}#
text = 'abcdefghijklm'
length = len(text)

import random
start = random.randint(0,length/2)
end = random.randint(start, length)
string = text[start:end]

#{code}#

answer = (len(string), string)
try:
    result = len_str(string)
    ok = True
except Exception, e:
    print_exception(e)
    ok = False
if not ok:
    pass
elif result == None:
    print_error("Wrong: did you use return?")
elif type(result) != type(answer):
    print_error("Wrong: the answer should be a tuple - you got "+str(result))
elif len(result) != len(answer):
    print_error("Wrong: the answer should be a pair - you got "+str(result))
elif result == answer:
    correct()
else:
    print_error("Wrong: the answer is %s - you got %s" % (repr(answer), repr(result)))










