#{Text}#
<h3>Tuple Assignment</h3>
The components of a tuple can be accessed with assignment - assigning
the components to individual variables.
<p>
Assuming the variable <tt>point3D</tt> contains a triple of numbers (e.g. <tt>(1,2,5)</tt>),
write a single assignment statement that assigns the components of <tt>point3D</tt> to the variables <tt>x</tt>,
<tt>y</tt> and <tt>z</tt> in order.

<p>For example, if <tt>point3D</tt> is the tuple <tt>(1,3,8)</tt> then <tt>x</tt>,
<tt>y</tt> and <tt>z</tt> should be <tt>1</tt>, <tt>3</tt> and <tt>8</tt> respectively.





















#{TestCode}#
#{global}#
import random,compiler

#{test}#
#{start}#
p3d = (random.randint(2,100), random.randint(2,100), random.randint(2,100))
#{init}#
point3D = p3d
#{code}#
ast = compiler.parse(user_text)
children = ast.getChildNodes()
if len(children) != 1 or str(children[0].__class__) != 'compiler.ast.Stmt':
    print_error("You should use only one assignment statement")
else:
    children = children[0].getChildNodes()
    if len(children) > 2:
        print_error("You should use only one assignment statement")
    elif len(children) == 2 and str(children[1].__class__) == 'compiler.ast.Discard':
        print_warning("Remove semi-colons")

#{test}#
#{start}#
p3d = (random.randint(2,100), random.randint(2,100), random.randint(2,100))
#{init}#
point3D = p3d
#{code}#
if point3D != p3d:
    print_error("Do not assign a value to point3D - MyPyTutor does that.")
elif (x,y,z) == p3d:
   correct()
else:
    (cx,cy,cz) = p3d
    print_error("Wrong - you got x = %s, y = %s, z = %s.\nThe correct answer is x = %d, y = %d, z = %d." % (repr(x),repr(y),repr(z),cx,cy,cz))
























